{
  "name": "INSERT JSON ORDERS",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -672,
        96
      ],
      "id": "a7044d68-5e41-4178-8356-82a46ed6329f",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.fileName }}",
                    "rightValue": ".json",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    },
                    "id": "01c6161c-4125-40c6-ab34-f013cd13dfa7"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ef6d5716-7b7a-41ba-9f30-827f9fff1fb1",
                    "leftValue": "={{ $json.fileName }}",
                    "rightValue": ".csv",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        -224,
        96
      ],
      "id": "6cfc3b4c-a82f-40c0-88a3-93af0797b31e",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        224,
        0
      ],
      "id": "56a0700f-1ecb-4c6d-bbde-c1b3d8d6506e",
      "name": "JSON"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        672,
        192
      ],
      "id": "600de0c6-7fbd-41c5-8595-516a5a3b60df",
      "name": "CSV"
    },
    {
      "parameters": {
        "jsCode": "// Input attendu: $input.first().json.data = tableau d'orders (comme ton exemple)\n// Sortie: une ligne par item avec tous les champs utiles\n\nconst orders = $input.first().json.data;\nconst flattened = [];\n\nfor (const order of orders) {\n  const {\n    order_id,\n    customer_id,\n    channel,\n    created_at,\n    payment_status,\n    items = []\n  } = order;\n\n  if (!Array.isArray(items) || items.length === 0) {\n    // S'il n'y a pas d'items, on sort quand même une ligne \"vide\"\n    flattened.push({\n      json: {\n        order_id,\n        customer_id,\n        channel,\n        created_at,\n        payment_status,\n        sku: null,\n        qty: 0,\n        unit_price: null,\n        // line_total: 0, // décommente si tu veux le total de ligne\n      }\n    });\n    continue;\n  }\n\n  for (const it of items) {\n    const qty = Number(it?.qty ?? 0);\n    const unit_price = Number(it?.unit_price ?? 0);\n    flattened.push({\n      json: {\n        order_id,\n        customer_id,\n        channel,\n        created_at,\n        payment_status,\n        sku: it?.sku ?? null,\n        qty,\n        unit_price,\n      }\n    });\n  }\n}\n\nreturn flattened;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        0
      ],
      "id": "e204cd88-c22f-4b7e-80c2-445776340cd9",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "di01",
          "mode": "list",
          "cachedResultName": "di01"
        },
        "table": {
          "__rl": true,
          "value": "order_items",
          "mode": "list",
          "cachedResultName": "order_items"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "order_id": "={{ $json.order_id }}",
            "customer_id": "={{ $json.customer_id }}",
            "channel": "={{ $json.channel }}",
            "created_at": "={{ $json.created_at }}",
            "payment_status": "={{ $json.payment_status }}",
            "sku": "={{ $json.sku }}",
            "qty": "={{ $json.qty }}",
            "unit_price": "={{ $json.unit_price }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "line_id",
              "displayName": "line_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "order_id",
              "displayName": "order_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "customer_id",
              "displayName": "customer_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "channel",
              "displayName": "channel",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "payment_status",
              "displayName": "payment_status",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "sku",
              "displayName": "sku",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "qty",
              "displayName": "qty",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "unit_price",
              "displayName": "unit_price",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "inserted_at",
              "displayName": "inserted_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        672,
        0
      ],
      "id": "42109825-0305-4453-97e9-bc339ee87b16",
      "name": "Insert rows in a table",
      "credentials": {
        "postgres": {
          "id": "qGTTPpL7AzOQdglT",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "fileSelector": "/files/input/*",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -448,
        96
      ],
      "id": "eece1ec1-8d6e-4b18-acd1-d849ee09f53b",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "77e63aeb-5450-4683-a712-d15a9222ed4a",
      "name": "Limit"
    },
    {
      "parameters": {
        "command": "=mv /files/input/{{ $('Read/Write Files from Disk').item.json.fileName }} /files/done/"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        896,
        96
      ],
      "id": "39381509-f98a-4cf4-bc82-99bdd922a594",
      "name": "Execute Command"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Insert rows in a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert rows in a table": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CSV": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ab976e77-2fcb-449b-90d4-efe8a9d40185",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bdb09622112d37b9fa9585d950e166cb8dacde51f5c6e73d6b18dbefc7052009"
  },
  "id": "vkS04SZVwOu4iYSX",
  "tags": []
}